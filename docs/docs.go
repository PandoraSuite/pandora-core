// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://example.com/terms/",
        "contact": {
            "name": "Pandora Core Support",
            "url": "http://example.com/support",
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/api-keys": {
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Generates an API Key for a specific environment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API Keys"
                ],
                "summary": "Creates a new API Key",
                "parameters": [
                    {
                        "description": "API Key creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.APIKeyCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.APIKeyResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/change-password": {
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Allows an authenticated user to change their password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Change password",
                "parameters": [
                    {
                        "description": "New password and confirmation",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ChangePassword"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "description": "Authenticates the administrator and returns a token.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Login username",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Login password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AuthenticateResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/clients": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Fetches a list of clients, optionally filtered by client type",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clients"
                ],
                "summary": "Retrieves all clients with optional filtering by type",
                "parameters": [
                    {
                        "enum": [
                            "developer",
                            "organization"
                        ],
                        "type": "string",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ClientResponse"
                            }
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Adds a new client to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clients"
                ],
                "summary": "Creates a new client",
                "parameters": [
                    {
                        "description": "Client creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ClientCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.ClientResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/clients/{id}/projects": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Fetches a list of projects associated with a given client",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clients"
                ],
                "summary": "Retrieves all projects for a specific client",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ProjectResponse"
                            }
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/environments": {
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Adds a new environment to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Environments"
                ],
                "summary": "Creates a new environment",
                "parameters": [
                    {
                        "description": "Environment creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EnvironmentCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.EnvironmentResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/environments/{id}/api-keys": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Returns a list of API Keys associated with a specific environment",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Environments"
                ],
                "summary": "Retrieves all API Keys for an environment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Environment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.APIKeyResponse"
                            }
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/environments/{id}/services": {
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Associates a service with a given environment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Environments"
                ],
                "summary": "Assigns a service to an environment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Environment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Service data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EnvironmentService"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/projects": {
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Adds a new project to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Creates a new project",
                "parameters": [
                    {
                        "description": "Project creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ProjectCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.ProjectResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/projects/{id}/environments": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Fetches a list of environments associated with a given project",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Retrieves all environments for a specific project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.EnvironmentResponse"
                            }
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/projects/{id}/services": {
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Associates a service with a given project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Assigns a service to a project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Service assignment data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ProjectService"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/services": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Fetches a list of all registered services",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "summary": "Retrieves all services",
                "parameters": [
                    {
                        "enum": [
                            "active",
                            "deactivated"
                        ],
                        "type": "string",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/dto.ServiceResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Adds a new service to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "summary": "Creates a new service",
                "parameters": [
                    {
                        "description": "Service creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ServiceCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.ServiceResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.APIKeyCreate": {
            "type": "object",
            "required": [
                "environment_id"
            ],
            "properties": {
                "environment_id": {
                    "type": "integer"
                },
                "expires_at": {
                    "type": "string"
                }
            }
        },
        "dto.APIKeyResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "environment_id": {
                    "type": "integer"
                },
                "expires_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "last_used": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "active",
                        "deactivated"
                    ]
                }
            }
        },
        "dto.AuthenticateResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "expires_in": {
                    "type": "string"
                },
                "force_password_reset": {
                    "type": "boolean"
                },
                "token_type": {
                    "type": "string"
                }
            }
        },
        "dto.ChangePassword": {
            "type": "object",
            "properties": {
                "confirm_password": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string"
                }
            }
        },
        "dto.ClientCreate": {
            "type": "object",
            "required": [
                "email",
                "name",
                "type"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "developer",
                        "organization"
                    ]
                }
            }
        },
        "dto.ClientResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "developer",
                        "organization"
                    ]
                }
            }
        },
        "dto.EnvironmentCreate": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "project_id": {
                    "type": "integer"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.EnvironmentService"
                    }
                }
            }
        },
        "dto.EnvironmentResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "project_id": {
                    "type": "integer"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.EnvironmentServiceResponse"
                    }
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "active",
                        "deactivated"
                    ]
                }
            }
        },
        "dto.EnvironmentService": {
            "type": "object",
            "required": [
                "id",
                "max_request"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "max_request": {
                    "type": "integer"
                }
            }
        },
        "dto.EnvironmentServiceResponse": {
            "type": "object",
            "properties": {
                "assigned_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "max_request": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "dto.ProjectCreate": {
            "type": "object",
            "required": [
                "client_id",
                "name",
                "status"
            ],
            "properties": {
                "client_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ProjectService"
                    }
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "in_production",
                        "in_development"
                    ]
                }
            }
        },
        "dto.ProjectResponse": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ProjectServiceResponse"
                    }
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "in_production",
                        "in_development",
                        "deactivated"
                    ]
                }
            }
        },
        "dto.ProjectService": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "max_request": {
                    "type": "integer"
                },
                "reset_frequency": {
                    "type": "string",
                    "enum": [
                        "daily",
                        "weekly",
                        "biweekly",
                        "monthly",
                        ""
                    ]
                }
            }
        },
        "dto.ProjectServiceResponse": {
            "type": "object",
            "properties": {
                "assigned_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "max_request": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "next_reset": {
                    "type": "string"
                },
                "reset_frequency": {
                    "$ref": "#/definitions/enums.ProjectServiceResetFrequency"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "dto.ServiceCreate": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "dto.ServiceResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "active",
                        "deactivated"
                    ]
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "enums.ProjectServiceResetFrequency": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "x-enum-varnames": [
                "ProjectServiceNull",
                "ProjectServiceDaily",
                "ProjectServiceWeekly",
                "ProjectServiceBiweekly",
                "ProjectServiceMonthly"
            ]
        },
        "utils.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {}
            }
        }
    },
    "securityDefinitions": {
        "OAuth2Password": {
            "type": "oauth2",
            "flow": "password",
            "tokenUrl": "/api/v1/auth/login"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Pandora Core",
	Description:      "API for centralized API key management and service access control.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
