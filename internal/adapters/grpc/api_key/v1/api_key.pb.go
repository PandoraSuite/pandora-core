// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: api_key/v1/api_key.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BaseValidateParams struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Key            string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Service        string                 `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	Environment    string                 `protobuf:"bytes,3,opt,name=environment,proto3" json:"environment,omitempty"`
	ServiceVersion string                 `protobuf:"bytes,4,opt,name=service_version,json=serviceVersion,proto3" json:"service_version,omitempty"`
	RequestTime    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=request_time,json=requestTime,proto3" json:"request_time,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *BaseValidateParams) Reset() {
	*x = BaseValidateParams{}
	mi := &file_api_key_v1_api_key_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseValidateParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseValidateParams) ProtoMessage() {}

func (x *BaseValidateParams) ProtoReflect() protoreflect.Message {
	mi := &file_api_key_v1_api_key_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseValidateParams.ProtoReflect.Descriptor instead.
func (*BaseValidateParams) Descriptor() ([]byte, []int) {
	return file_api_key_v1_api_key_proto_rawDescGZIP(), []int{0}
}

func (x *BaseValidateParams) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *BaseValidateParams) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *BaseValidateParams) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *BaseValidateParams) GetServiceVersion() string {
	if x != nil {
		return x.ServiceVersion
	}
	return ""
}

func (x *BaseValidateParams) GetRequestTime() *timestamppb.Timestamp {
	if x != nil {
		return x.RequestTime
	}
	return nil
}

type ValidateAndConsumeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Params        *BaseValidateParams    `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateAndConsumeRequest) Reset() {
	*x = ValidateAndConsumeRequest{}
	mi := &file_api_key_v1_api_key_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateAndConsumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAndConsumeRequest) ProtoMessage() {}

func (x *ValidateAndConsumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_key_v1_api_key_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateAndConsumeRequest.ProtoReflect.Descriptor instead.
func (*ValidateAndConsumeRequest) Descriptor() ([]byte, []int) {
	return file_api_key_v1_api_key_proto_rawDescGZIP(), []int{1}
}

func (x *ValidateAndConsumeRequest) GetParams() *BaseValidateParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type ValidateAndReserveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Params        *BaseValidateParams    `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateAndReserveRequest) Reset() {
	*x = ValidateAndReserveRequest{}
	mi := &file_api_key_v1_api_key_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateAndReserveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAndReserveRequest) ProtoMessage() {}

func (x *ValidateAndReserveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_key_v1_api_key_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateAndReserveRequest.ProtoReflect.Descriptor instead.
func (*ValidateAndReserveRequest) Descriptor() ([]byte, []int) {
	return file_api_key_v1_api_key_proto_rawDescGZIP(), []int{2}
}

func (x *ValidateAndReserveRequest) GetParams() *BaseValidateParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type ValidateWithReservationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	ReservationId string                 `protobuf:"bytes,2,opt,name=reservation_id,json=reservationId,proto3" json:"reservation_id,omitempty"`
	RequestTime   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=request_time,json=requestTime,proto3" json:"request_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateWithReservationRequest) Reset() {
	*x = ValidateWithReservationRequest{}
	mi := &file_api_key_v1_api_key_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateWithReservationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateWithReservationRequest) ProtoMessage() {}

func (x *ValidateWithReservationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_key_v1_api_key_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateWithReservationRequest.ProtoReflect.Descriptor instead.
func (*ValidateWithReservationRequest) Descriptor() ([]byte, []int) {
	return file_api_key_v1_api_key_proto_rawDescGZIP(), []int{3}
}

func (x *ValidateWithReservationRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ValidateWithReservationRequest) GetReservationId() string {
	if x != nil {
		return x.ReservationId
	}
	return ""
}

func (x *ValidateWithReservationRequest) GetRequestTime() *timestamppb.Timestamp {
	if x != nil {
		return x.RequestTime
	}
	return nil
}

type ValidateAndConsumeResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Valid bool                   `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*ValidateAndConsumeResponse_Successful_
	//	*ValidateAndConsumeResponse_Failed_
	Result        isValidateAndConsumeResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateAndConsumeResponse) Reset() {
	*x = ValidateAndConsumeResponse{}
	mi := &file_api_key_v1_api_key_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateAndConsumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAndConsumeResponse) ProtoMessage() {}

func (x *ValidateAndConsumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_key_v1_api_key_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateAndConsumeResponse.ProtoReflect.Descriptor instead.
func (*ValidateAndConsumeResponse) Descriptor() ([]byte, []int) {
	return file_api_key_v1_api_key_proto_rawDescGZIP(), []int{4}
}

func (x *ValidateAndConsumeResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *ValidateAndConsumeResponse) GetResult() isValidateAndConsumeResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ValidateAndConsumeResponse) GetSuccessful() *ValidateAndConsumeResponse_Successful {
	if x != nil {
		if x, ok := x.Result.(*ValidateAndConsumeResponse_Successful_); ok {
			return x.Successful
		}
	}
	return nil
}

func (x *ValidateAndConsumeResponse) GetFailed() *ValidateAndConsumeResponse_Failed {
	if x != nil {
		if x, ok := x.Result.(*ValidateAndConsumeResponse_Failed_); ok {
			return x.Failed
		}
	}
	return nil
}

type isValidateAndConsumeResponse_Result interface {
	isValidateAndConsumeResponse_Result()
}

type ValidateAndConsumeResponse_Successful_ struct {
	Successful *ValidateAndConsumeResponse_Successful `protobuf:"bytes,2,opt,name=successful,proto3,oneof"`
}

type ValidateAndConsumeResponse_Failed_ struct {
	Failed *ValidateAndConsumeResponse_Failed `protobuf:"bytes,3,opt,name=failed,proto3,oneof"`
}

func (*ValidateAndConsumeResponse_Successful_) isValidateAndConsumeResponse_Result() {}

func (*ValidateAndConsumeResponse_Failed_) isValidateAndConsumeResponse_Result() {}

type ValidateAndReserveResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Valid bool                   `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*ValidateAndReserveResponse_Successful_
	//	*ValidateAndReserveResponse_Failed_
	Result        isValidateAndReserveResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateAndReserveResponse) Reset() {
	*x = ValidateAndReserveResponse{}
	mi := &file_api_key_v1_api_key_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateAndReserveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAndReserveResponse) ProtoMessage() {}

func (x *ValidateAndReserveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_key_v1_api_key_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateAndReserveResponse.ProtoReflect.Descriptor instead.
func (*ValidateAndReserveResponse) Descriptor() ([]byte, []int) {
	return file_api_key_v1_api_key_proto_rawDescGZIP(), []int{5}
}

func (x *ValidateAndReserveResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *ValidateAndReserveResponse) GetResult() isValidateAndReserveResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ValidateAndReserveResponse) GetSuccessful() *ValidateAndReserveResponse_Successful {
	if x != nil {
		if x, ok := x.Result.(*ValidateAndReserveResponse_Successful_); ok {
			return x.Successful
		}
	}
	return nil
}

func (x *ValidateAndReserveResponse) GetFailed() *ValidateAndReserveResponse_Failed {
	if x != nil {
		if x, ok := x.Result.(*ValidateAndReserveResponse_Failed_); ok {
			return x.Failed
		}
	}
	return nil
}

type isValidateAndReserveResponse_Result interface {
	isValidateAndReserveResponse_Result()
}

type ValidateAndReserveResponse_Successful_ struct {
	Successful *ValidateAndReserveResponse_Successful `protobuf:"bytes,2,opt,name=successful,proto3,oneof"`
}

type ValidateAndReserveResponse_Failed_ struct {
	Failed *ValidateAndReserveResponse_Failed `protobuf:"bytes,3,opt,name=failed,proto3,oneof"`
}

func (*ValidateAndReserveResponse_Successful_) isValidateAndReserveResponse_Result() {}

func (*ValidateAndReserveResponse_Failed_) isValidateAndReserveResponse_Result() {}

type ValidateWithReservationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Valid bool                   `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*ValidateWithReservationResponse_Successful_
	//	*ValidateWithReservationResponse_Failed_
	Result        isValidateWithReservationResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateWithReservationResponse) Reset() {
	*x = ValidateWithReservationResponse{}
	mi := &file_api_key_v1_api_key_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateWithReservationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateWithReservationResponse) ProtoMessage() {}

func (x *ValidateWithReservationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_key_v1_api_key_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateWithReservationResponse.ProtoReflect.Descriptor instead.
func (*ValidateWithReservationResponse) Descriptor() ([]byte, []int) {
	return file_api_key_v1_api_key_proto_rawDescGZIP(), []int{6}
}

func (x *ValidateWithReservationResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *ValidateWithReservationResponse) GetResult() isValidateWithReservationResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ValidateWithReservationResponse) GetSuccessful() *ValidateWithReservationResponse_Successful {
	if x != nil {
		if x, ok := x.Result.(*ValidateWithReservationResponse_Successful_); ok {
			return x.Successful
		}
	}
	return nil
}

func (x *ValidateWithReservationResponse) GetFailed() *ValidateWithReservationResponse_Failed {
	if x != nil {
		if x, ok := x.Result.(*ValidateWithReservationResponse_Failed_); ok {
			return x.Failed
		}
	}
	return nil
}

type isValidateWithReservationResponse_Result interface {
	isValidateWithReservationResponse_Result()
}

type ValidateWithReservationResponse_Successful_ struct {
	Successful *ValidateWithReservationResponse_Successful `protobuf:"bytes,2,opt,name=successful,proto3,oneof"`
}

type ValidateWithReservationResponse_Failed_ struct {
	Failed *ValidateWithReservationResponse_Failed `protobuf:"bytes,3,opt,name=failed,proto3,oneof"`
}

func (*ValidateWithReservationResponse_Successful_) isValidateWithReservationResponse_Result() {}

func (*ValidateWithReservationResponse_Failed_) isValidateWithReservationResponse_Result() {}

type ValidateAndConsumeResponse_Successful struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	RequestId        string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	AvailableRequest int64                  `protobuf:"varint,2,opt,name=available_request,json=availableRequest,proto3" json:"available_request,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ValidateAndConsumeResponse_Successful) Reset() {
	*x = ValidateAndConsumeResponse_Successful{}
	mi := &file_api_key_v1_api_key_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateAndConsumeResponse_Successful) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAndConsumeResponse_Successful) ProtoMessage() {}

func (x *ValidateAndConsumeResponse_Successful) ProtoReflect() protoreflect.Message {
	mi := &file_api_key_v1_api_key_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateAndConsumeResponse_Successful.ProtoReflect.Descriptor instead.
func (*ValidateAndConsumeResponse_Successful) Descriptor() ([]byte, []int) {
	return file_api_key_v1_api_key_proto_rawDescGZIP(), []int{4, 0}
}

func (x *ValidateAndConsumeResponse_Successful) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *ValidateAndConsumeResponse_Successful) GetAvailableRequest() int64 {
	if x != nil {
		return x.AvailableRequest
	}
	return 0
}

type ValidateAndConsumeResponse_Failed struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateAndConsumeResponse_Failed) Reset() {
	*x = ValidateAndConsumeResponse_Failed{}
	mi := &file_api_key_v1_api_key_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateAndConsumeResponse_Failed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAndConsumeResponse_Failed) ProtoMessage() {}

func (x *ValidateAndConsumeResponse_Failed) ProtoReflect() protoreflect.Message {
	mi := &file_api_key_v1_api_key_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateAndConsumeResponse_Failed.ProtoReflect.Descriptor instead.
func (*ValidateAndConsumeResponse_Failed) Descriptor() ([]byte, []int) {
	return file_api_key_v1_api_key_proto_rawDescGZIP(), []int{4, 1}
}

func (x *ValidateAndConsumeResponse_Failed) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ValidateAndConsumeResponse_Failed) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ValidateAndReserveResponse_Successful struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	RequestId        string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	AvailableRequest int64                  `protobuf:"varint,2,opt,name=available_request,json=availableRequest,proto3" json:"available_request,omitempty"`
	ReservationId    string                 `protobuf:"bytes,3,opt,name=reservation_id,json=reservationId,proto3" json:"reservation_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ValidateAndReserveResponse_Successful) Reset() {
	*x = ValidateAndReserveResponse_Successful{}
	mi := &file_api_key_v1_api_key_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateAndReserveResponse_Successful) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAndReserveResponse_Successful) ProtoMessage() {}

func (x *ValidateAndReserveResponse_Successful) ProtoReflect() protoreflect.Message {
	mi := &file_api_key_v1_api_key_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateAndReserveResponse_Successful.ProtoReflect.Descriptor instead.
func (*ValidateAndReserveResponse_Successful) Descriptor() ([]byte, []int) {
	return file_api_key_v1_api_key_proto_rawDescGZIP(), []int{5, 0}
}

func (x *ValidateAndReserveResponse_Successful) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *ValidateAndReserveResponse_Successful) GetAvailableRequest() int64 {
	if x != nil {
		return x.AvailableRequest
	}
	return 0
}

func (x *ValidateAndReserveResponse_Successful) GetReservationId() string {
	if x != nil {
		return x.ReservationId
	}
	return ""
}

type ValidateAndReserveResponse_Failed struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateAndReserveResponse_Failed) Reset() {
	*x = ValidateAndReserveResponse_Failed{}
	mi := &file_api_key_v1_api_key_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateAndReserveResponse_Failed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAndReserveResponse_Failed) ProtoMessage() {}

func (x *ValidateAndReserveResponse_Failed) ProtoReflect() protoreflect.Message {
	mi := &file_api_key_v1_api_key_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateAndReserveResponse_Failed.ProtoReflect.Descriptor instead.
func (*ValidateAndReserveResponse_Failed) Descriptor() ([]byte, []int) {
	return file_api_key_v1_api_key_proto_rawDescGZIP(), []int{5, 1}
}

func (x *ValidateAndReserveResponse_Failed) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ValidateAndReserveResponse_Failed) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ValidateWithReservationResponse_Successful struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateWithReservationResponse_Successful) Reset() {
	*x = ValidateWithReservationResponse_Successful{}
	mi := &file_api_key_v1_api_key_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateWithReservationResponse_Successful) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateWithReservationResponse_Successful) ProtoMessage() {}

func (x *ValidateWithReservationResponse_Successful) ProtoReflect() protoreflect.Message {
	mi := &file_api_key_v1_api_key_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateWithReservationResponse_Successful.ProtoReflect.Descriptor instead.
func (*ValidateWithReservationResponse_Successful) Descriptor() ([]byte, []int) {
	return file_api_key_v1_api_key_proto_rawDescGZIP(), []int{6, 0}
}

func (x *ValidateWithReservationResponse_Successful) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type ValidateWithReservationResponse_Failed struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateWithReservationResponse_Failed) Reset() {
	*x = ValidateWithReservationResponse_Failed{}
	mi := &file_api_key_v1_api_key_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateWithReservationResponse_Failed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateWithReservationResponse_Failed) ProtoMessage() {}

func (x *ValidateWithReservationResponse_Failed) ProtoReflect() protoreflect.Message {
	mi := &file_api_key_v1_api_key_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateWithReservationResponse_Failed.ProtoReflect.Descriptor instead.
func (*ValidateWithReservationResponse_Failed) Descriptor() ([]byte, []int) {
	return file_api_key_v1_api_key_proto_rawDescGZIP(), []int{6, 1}
}

func (x *ValidateWithReservationResponse_Failed) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ValidateWithReservationResponse_Failed) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_api_key_v1_api_key_proto protoreflect.FileDescriptor

const file_api_key_v1_api_key_proto_rawDesc = "" +
	"\n" +
	"\x18api_key/v1/api_key.proto\x12\n" +
	"api_key.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xca\x01\n" +
	"\x12BaseValidateParams\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x18\n" +
	"\aservice\x18\x02 \x01(\tR\aservice\x12 \n" +
	"\venvironment\x18\x03 \x01(\tR\venvironment\x12'\n" +
	"\x0fservice_version\x18\x04 \x01(\tR\x0eserviceVersion\x12=\n" +
	"\frequest_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\vrequestTime\"S\n" +
	"\x19ValidateAndConsumeRequest\x126\n" +
	"\x06params\x18\x01 \x01(\v2\x1e.api_key.v1.BaseValidateParamsR\x06params\"S\n" +
	"\x19ValidateAndReserveRequest\x126\n" +
	"\x06params\x18\x01 \x01(\v2\x1e.api_key.v1.BaseValidateParamsR\x06params\"\x98\x01\n" +
	"\x1eValidateWithReservationRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12%\n" +
	"\x0ereservation_id\x18\x02 \x01(\tR\rreservationId\x12=\n" +
	"\frequest_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\vrequestTime\"\xec\x02\n" +
	"\x1aValidateAndConsumeResponse\x12\x14\n" +
	"\x05valid\x18\x01 \x01(\bR\x05valid\x12S\n" +
	"\n" +
	"successful\x18\x02 \x01(\v21.api_key.v1.ValidateAndConsumeResponse.SuccessfulH\x00R\n" +
	"successful\x12G\n" +
	"\x06failed\x18\x03 \x01(\v2-.api_key.v1.ValidateAndConsumeResponse.FailedH\x00R\x06failed\x1aX\n" +
	"\n" +
	"Successful\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12+\n" +
	"\x11available_request\x18\x02 \x01(\x03R\x10availableRequest\x1a6\n" +
	"\x06Failed\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessageB\b\n" +
	"\x06result\"\x93\x03\n" +
	"\x1aValidateAndReserveResponse\x12\x14\n" +
	"\x05valid\x18\x01 \x01(\bR\x05valid\x12S\n" +
	"\n" +
	"successful\x18\x02 \x01(\v21.api_key.v1.ValidateAndReserveResponse.SuccessfulH\x00R\n" +
	"successful\x12G\n" +
	"\x06failed\x18\x03 \x01(\v2-.api_key.v1.ValidateAndReserveResponse.FailedH\x00R\x06failed\x1a\x7f\n" +
	"\n" +
	"Successful\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12+\n" +
	"\x11available_request\x18\x02 \x01(\x03R\x10availableRequest\x12%\n" +
	"\x0ereservation_id\x18\x03 \x01(\tR\rreservationId\x1a6\n" +
	"\x06Failed\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessageB\b\n" +
	"\x06result\"\xce\x02\n" +
	"\x1fValidateWithReservationResponse\x12\x14\n" +
	"\x05valid\x18\x01 \x01(\bR\x05valid\x12X\n" +
	"\n" +
	"successful\x18\x02 \x01(\v26.api_key.v1.ValidateWithReservationResponse.SuccessfulH\x00R\n" +
	"successful\x12L\n" +
	"\x06failed\x18\x03 \x01(\v22.api_key.v1.ValidateWithReservationResponse.FailedH\x00R\x06failed\x1a+\n" +
	"\n" +
	"Successful\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x1a6\n" +
	"\x06Failed\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessageB\b\n" +
	"\x06result2\xcd\x02\n" +
	"\rAPIKeyService\x12c\n" +
	"\x12ValidateAndConsume\x12%.api_key.v1.ValidateAndConsumeRequest\x1a&.api_key.v1.ValidateAndConsumeResponse\x12c\n" +
	"\x12ValidateAndReserve\x12%.api_key.v1.ValidateAndReserveRequest\x1a&.api_key.v1.ValidateAndReserveResponse\x12r\n" +
	"\x17ValidateWithReservation\x12*.api_key.v1.ValidateWithReservationRequest\x1a+.api_key.v1.ValidateWithReservationResponseB\fZ\n" +
	"api_key/pbb\x06proto3"

var (
	file_api_key_v1_api_key_proto_rawDescOnce sync.Once
	file_api_key_v1_api_key_proto_rawDescData []byte
)

func file_api_key_v1_api_key_proto_rawDescGZIP() []byte {
	file_api_key_v1_api_key_proto_rawDescOnce.Do(func() {
		file_api_key_v1_api_key_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_key_v1_api_key_proto_rawDesc), len(file_api_key_v1_api_key_proto_rawDesc)))
	})
	return file_api_key_v1_api_key_proto_rawDescData
}

var file_api_key_v1_api_key_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_api_key_v1_api_key_proto_goTypes = []any{
	(*BaseValidateParams)(nil),                         // 0: api_key.v1.BaseValidateParams
	(*ValidateAndConsumeRequest)(nil),                  // 1: api_key.v1.ValidateAndConsumeRequest
	(*ValidateAndReserveRequest)(nil),                  // 2: api_key.v1.ValidateAndReserveRequest
	(*ValidateWithReservationRequest)(nil),             // 3: api_key.v1.ValidateWithReservationRequest
	(*ValidateAndConsumeResponse)(nil),                 // 4: api_key.v1.ValidateAndConsumeResponse
	(*ValidateAndReserveResponse)(nil),                 // 5: api_key.v1.ValidateAndReserveResponse
	(*ValidateWithReservationResponse)(nil),            // 6: api_key.v1.ValidateWithReservationResponse
	(*ValidateAndConsumeResponse_Successful)(nil),      // 7: api_key.v1.ValidateAndConsumeResponse.Successful
	(*ValidateAndConsumeResponse_Failed)(nil),          // 8: api_key.v1.ValidateAndConsumeResponse.Failed
	(*ValidateAndReserveResponse_Successful)(nil),      // 9: api_key.v1.ValidateAndReserveResponse.Successful
	(*ValidateAndReserveResponse_Failed)(nil),          // 10: api_key.v1.ValidateAndReserveResponse.Failed
	(*ValidateWithReservationResponse_Successful)(nil), // 11: api_key.v1.ValidateWithReservationResponse.Successful
	(*ValidateWithReservationResponse_Failed)(nil),     // 12: api_key.v1.ValidateWithReservationResponse.Failed
	(*timestamppb.Timestamp)(nil),                      // 13: google.protobuf.Timestamp
}
var file_api_key_v1_api_key_proto_depIdxs = []int32{
	13, // 0: api_key.v1.BaseValidateParams.request_time:type_name -> google.protobuf.Timestamp
	0,  // 1: api_key.v1.ValidateAndConsumeRequest.params:type_name -> api_key.v1.BaseValidateParams
	0,  // 2: api_key.v1.ValidateAndReserveRequest.params:type_name -> api_key.v1.BaseValidateParams
	13, // 3: api_key.v1.ValidateWithReservationRequest.request_time:type_name -> google.protobuf.Timestamp
	7,  // 4: api_key.v1.ValidateAndConsumeResponse.successful:type_name -> api_key.v1.ValidateAndConsumeResponse.Successful
	8,  // 5: api_key.v1.ValidateAndConsumeResponse.failed:type_name -> api_key.v1.ValidateAndConsumeResponse.Failed
	9,  // 6: api_key.v1.ValidateAndReserveResponse.successful:type_name -> api_key.v1.ValidateAndReserveResponse.Successful
	10, // 7: api_key.v1.ValidateAndReserveResponse.failed:type_name -> api_key.v1.ValidateAndReserveResponse.Failed
	11, // 8: api_key.v1.ValidateWithReservationResponse.successful:type_name -> api_key.v1.ValidateWithReservationResponse.Successful
	12, // 9: api_key.v1.ValidateWithReservationResponse.failed:type_name -> api_key.v1.ValidateWithReservationResponse.Failed
	1,  // 10: api_key.v1.APIKeyService.ValidateAndConsume:input_type -> api_key.v1.ValidateAndConsumeRequest
	2,  // 11: api_key.v1.APIKeyService.ValidateAndReserve:input_type -> api_key.v1.ValidateAndReserveRequest
	3,  // 12: api_key.v1.APIKeyService.ValidateWithReservation:input_type -> api_key.v1.ValidateWithReservationRequest
	4,  // 13: api_key.v1.APIKeyService.ValidateAndConsume:output_type -> api_key.v1.ValidateAndConsumeResponse
	5,  // 14: api_key.v1.APIKeyService.ValidateAndReserve:output_type -> api_key.v1.ValidateAndReserveResponse
	6,  // 15: api_key.v1.APIKeyService.ValidateWithReservation:output_type -> api_key.v1.ValidateWithReservationResponse
	13, // [13:16] is the sub-list for method output_type
	10, // [10:13] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_api_key_v1_api_key_proto_init() }
func file_api_key_v1_api_key_proto_init() {
	if File_api_key_v1_api_key_proto != nil {
		return
	}
	file_api_key_v1_api_key_proto_msgTypes[4].OneofWrappers = []any{
		(*ValidateAndConsumeResponse_Successful_)(nil),
		(*ValidateAndConsumeResponse_Failed_)(nil),
	}
	file_api_key_v1_api_key_proto_msgTypes[5].OneofWrappers = []any{
		(*ValidateAndReserveResponse_Successful_)(nil),
		(*ValidateAndReserveResponse_Failed_)(nil),
	}
	file_api_key_v1_api_key_proto_msgTypes[6].OneofWrappers = []any{
		(*ValidateWithReservationResponse_Successful_)(nil),
		(*ValidateWithReservationResponse_Failed_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_key_v1_api_key_proto_rawDesc), len(file_api_key_v1_api_key_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_key_v1_api_key_proto_goTypes,
		DependencyIndexes: file_api_key_v1_api_key_proto_depIdxs,
		MessageInfos:      file_api_key_v1_api_key_proto_msgTypes,
	}.Build()
	File_api_key_v1_api_key_proto = out.File
	file_api_key_v1_api_key_proto_goTypes = nil
	file_api_key_v1_api_key_proto_depIdxs = nil
}
