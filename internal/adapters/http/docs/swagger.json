{
    "swagger": "2.0",
    "info": {
        "description": "API for centralized API key management and service access control.",
        "title": "Pandora Core",
        "termsOfService": "http://example.com/terms/",
        "contact": {
            "name": "Pandora Core Support",
            "url": "http://example.com/support",
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "paths": {
        "/api/v1/api-keys": {
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Generates an API Key for a specific environment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API Keys"
                ],
                "summary": "Creates a new API Key",
                "parameters": [
                    {
                        "description": "API Key creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.APIKeyCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.APIKeyResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/api-keys/{id}": {
            "delete": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Deletes a specific API key by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API Keys"
                ],
                "summary": "Deletes an API key",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "API Key ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Modifies the expiration date of a specific API key by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API Keys"
                ],
                "summary": "Updates an API key",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "API Key ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated API key data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.APIKeyUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.APIKeyResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/api-keys/{id}/reveal/key": {
            "get": {
                "security": [
                    {
                        "ScopedToken": []
                    }
                ],
                "description": "Retrieves the actual API Key value for a specific API key by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API Keys"
                ],
                "summary": "Reveals the API Key",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "API Key ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.APIKeyRevealKeyResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/change-password": {
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Allows an authenticated user to change their password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Change password",
                "parameters": [
                    {
                        "description": "Change password request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ChangePassword"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "description": "Authenticates the administrator and returns a token.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate user",
                "parameters": [
                    {
                        "minLength": 12,
                        "type": "string",
                        "format": "password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AuthenticateResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/reauthenticate": {
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Reauthenticates the user for sensitive actions like revealing API keys.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Reauthenticate user",
                "parameters": [
                    {
                        "description": "Reauthentication request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Reauthenticate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ReauthenticateResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/clients": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Fetches a list of clients, optionally filtered by client type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clients"
                ],
                "summary": "Retrieves all clients with optional filtering by type",
                "parameters": [
                    {
                        "enum": [
                            "developer",
                            "organization"
                        ],
                        "type": "string",
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ClientResponse"
                            }
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Adds a new client to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clients"
                ],
                "summary": "Creates a new client",
                "parameters": [
                    {
                        "description": "Client creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ClientCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.ClientResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/clients/{id}": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Fetches the details of a specific client using its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clients"
                ],
                "summary": "Retrieves a client by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ClientResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Removes a specific client from the system using its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clients"
                ],
                "summary": "Deletes a client by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Modifies client data based on the provided ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clients"
                ],
                "summary": "Updates an existing client",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated client data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ClientUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ClientResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/clients/{id}/projects": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Fetches a list of projects associated with a given client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clients"
                ],
                "summary": "Retrieves all projects for a specific client",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ProjectResponse"
                            }
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/environments": {
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Adds a new environment to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Environments"
                ],
                "summary": "Creates a new environment",
                "parameters": [
                    {
                        "description": "Environment creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EnvironmentCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.EnvironmentResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/environments/{id}": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Fetches the details of a specific environment using its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Environments"
                ],
                "summary": "Retrieves an environment by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Environment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.EnvironmentResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Removes an environment from the system by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Environments"
                ],
                "summary": "Deletes an environment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Environment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Modifies the details of a specific environment by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Environments"
                ],
                "summary": "Updates an environment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Environment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated environment data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EnvironmentUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.EnvironmentResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/environments/{id}/api-keys": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Returns a list of API Keys associated with a specific environment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Environments"
                ],
                "summary": "Retrieves all API Keys for an environment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Environment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.APIKeyResponse"
                            }
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/environments/{id}/services": {
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Associates a service with a given environment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Environments"
                ],
                "summary": "Assigns a service to an environment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Environment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Service data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EnvironmentService"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.EnvironmentServiceResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/environments/{id}/services/{service_id}": {
            "delete": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Disassociates a service from a specific environment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Environments"
                ],
                "summary": "Removes a service from an environment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Environment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Service ID",
                        "name": "service_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Modifies the configuration of a service within a specific environment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Environments"
                ],
                "summary": "Updates a service assigned to an environment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Environment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Service ID",
                        "name": "service_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated service configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EnvironmentServiceUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.EnvironmentServiceResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/environments/{id}/services/{service_id}/reset-requests": {
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Resets the available request count for a specific service within an environment",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Environments"
                ],
                "summary": "Resets request quota for a service in an environment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Environment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Service ID",
                        "name": "service_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.EnvironmentServiceResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/projects": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Fetches a complete list of projects in the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Retrieves all projects",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ProjectResponse"
                            }
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Adds a new project to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Creates a new project",
                "parameters": [
                    {
                        "description": "Project creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ProjectCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.ProjectResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/projects/{id}": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Fetches the details of a specific project using its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Retrieves a project by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ProjectResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Removes a specific project from the system by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Deletes a project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Modifies the details of a specific project by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Updates a project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated project data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ProjectUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ProjectResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/projects/{id}/environments": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Fetches a list of environments associated with a given project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Retrieves all environments for a specific project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.EnvironmentResponse"
                            }
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/projects/{id}/services": {
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Associates a service with a given project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Assigns a service to a project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Service assignment data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ProjectService"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ProjectServiceResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/projects/{id}/services/{service_id}": {
            "delete": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Disassociates a service from a specific project",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Removes a service from a project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Service ID",
                        "name": "service_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Modifies the configuration of a service within a specific project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Updates a service assigned to a project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Service ID",
                        "name": "service_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated service configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ProjectServiceUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ProjectServiceResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/projects/{id}/services/{service_id}/reset-requests": {
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Resets the request quota for a specific service assigned to a project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Resets available requests for a service in a project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Service ID",
                        "name": "service_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Reset configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ProjectResetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ProjectResetRequestResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/services": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Fetches a list of all registered services",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "summary": "Retrieves all services",
                "parameters": [
                    {
                        "enum": [
                            "enabled",
                            "disabled",
                            "deprecated"
                        ],
                        "type": "string",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ServiceResponse"
                            }
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Adds a new service to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "summary": "Creates a new service",
                "parameters": [
                    {
                        "description": "Service creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ServiceCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.ServiceResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/services/{id}": {
            "delete": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Permanently removes a service by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "summary": "Deletes a service",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/services/{id}/requests": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Fetches a list of all requests associated with a specific service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "summary": "Retrieves all requests for a service",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "success",
                            "forwarded",
                            "client_error",
                            "server_error",
                            "unauthorized",
                            "quota_exceeded"
                        ],
                        "type": "string",
                        "name": "execution_status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "request_time_from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "request_time_to",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.RequestResponse"
                            }
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/v1/services/{id}/status": {
            "patch": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Changes the current status of a specific service by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "summary": "Updates the status of a service",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New service status",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ServiceStatusUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ServiceResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/errors.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.APIKeyCreate": {
            "type": "object",
            "required": [
                "environment_id"
            ],
            "properties": {
                "environment_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-timezone": "utc"
                }
            }
        },
        "dto.APIKeyResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-timezone": "utc"
                },
                "environment_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-timezone": "utc"
                },
                "id": {
                    "type": "integer",
                    "minimum": 1
                },
                "key": {
                    "type": "string",
                    "maxLength": 11,
                    "minLength": 11,
                    "example": "xxxx...xxxx"
                },
                "last_used": {
                    "type": "string",
                    "format": "date-time",
                    "x-timezone": "utc"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "enabled",
                        "disabled",
                        "deprecated"
                    ]
                }
            }
        },
        "dto.APIKeyRevealKeyResponse": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "example": "xxxxxxxxxxxxx"
                }
            }
        },
        "dto.APIKeyUpdate": {
            "type": "object",
            "properties": {
                "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-timezone": "utc"
                }
            }
        },
        "dto.AuthenticateResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "format": "jwt"
                },
                "expires_in": {
                    "type": "string",
                    "format": "date-time",
                    "x-timezone": "utc"
                },
                "force_password_reset": {
                    "type": "boolean"
                },
                "token_type": {
                    "type": "string"
                }
            }
        },
        "dto.ChangePassword": {
            "type": "object",
            "required": [
                "confirm_password",
                "new_password"
            ],
            "properties": {
                "confirm_password": {
                    "type": "string",
                    "format": "password",
                    "minLength": 12
                },
                "new_password": {
                    "type": "string",
                    "format": "password",
                    "minLength": 12
                }
            }
        },
        "dto.ClientCreate": {
            "type": "object",
            "required": [
                "email",
                "name",
                "type"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "format": "email"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "developer",
                        "organization"
                    ]
                }
            }
        },
        "dto.ClientResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-timezone": "utc"
                },
                "email": {
                    "type": "string",
                    "format": "email"
                },
                "id": {
                    "type": "integer",
                    "minimum": 1
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "developer",
                        "organization"
                    ]
                }
            }
        },
        "dto.ClientUpdate": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "format": "email"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "developer",
                        "organization"
                    ]
                }
            }
        },
        "dto.EnvironmentCreate": {
            "type": "object",
            "required": [
                "name",
                "project_id"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "project_id": {
                    "type": "integer"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.EnvironmentService"
                    }
                }
            }
        },
        "dto.EnvironmentResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "project_id": {
                    "type": "integer"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.EnvironmentServiceResponse"
                    }
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "enabled",
                        "disabled",
                        "deprecated"
                    ]
                }
            }
        },
        "dto.EnvironmentService": {
            "type": "object",
            "required": [
                "id",
                "max_requests"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "max_requests": {
                    "type": "integer"
                }
            }
        },
        "dto.EnvironmentServiceReset": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "service": {
                    "$ref": "#/definitions/dto.EnvironmentServiceResponse"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "enabled",
                        "disabled",
                        "deprecated"
                    ]
                }
            }
        },
        "dto.EnvironmentServiceResponse": {
            "type": "object",
            "properties": {
                "assigned_at": {
                    "type": "string"
                },
                "available_requests": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "max_requests": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "dto.EnvironmentServiceUpdate": {
            "type": "object",
            "required": [
                "max_requests"
            ],
            "properties": {
                "max_requests": {
                    "type": "integer"
                }
            }
        },
        "dto.EnvironmentUpdate": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.ProjectCreate": {
            "type": "object",
            "required": [
                "client_id"
            ],
            "properties": {
                "client_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ProjectService"
                    }
                }
            }
        },
        "dto.ProjectResetRequest": {
            "type": "object",
            "required": [
                "recalculate_next_reset"
            ],
            "properties": {
                "recalculate_next_reset": {
                    "type": "boolean"
                }
            }
        },
        "dto.ProjectResetRequestResponse": {
            "type": "object",
            "properties": {
                "environment_services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.EnvironmentServiceReset"
                    }
                },
                "project_service": {
                    "$ref": "#/definitions/dto.ProjectServiceResponse"
                },
                "reset_count": {
                    "type": "integer"
                }
            }
        },
        "dto.ProjectResponse": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ProjectServiceResponse"
                    }
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "enabled",
                        "disabled"
                    ]
                }
            }
        },
        "dto.ProjectService": {
            "type": "object",
            "required": [
                "id",
                "max_requests",
                "reset_frequency"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "max_requests": {
                    "type": "integer"
                },
                "reset_frequency": {
                    "type": "string",
                    "enum": [
                        "daily",
                        "weekly",
                        "biweekly",
                        "monthly"
                    ]
                }
            }
        },
        "dto.ProjectServiceResponse": {
            "type": "object",
            "properties": {
                "assigned_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "max_requests": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "next_reset": {
                    "type": "string"
                },
                "reset_frequency": {
                    "type": "string",
                    "enum": [
                        "daily",
                        "weekly",
                        "biweekly",
                        "monthly"
                    ]
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "dto.ProjectServiceUpdate": {
            "type": "object",
            "required": [
                "max_requests"
            ],
            "properties": {
                "max_requests": {
                    "type": "integer"
                },
                "next_reset": {
                    "type": "string",
                    "format": "date"
                },
                "reset_frequency": {
                    "type": "string",
                    "enum": [
                        "daily",
                        "weekly",
                        "biweekly",
                        "monthly"
                    ]
                }
            }
        },
        "dto.ProjectUpdate": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.Reauthenticate": {
            "type": "object",
            "required": [
                "action",
                "password"
            ],
            "properties": {
                "action": {
                    "type": "string",
                    "enum": [
                        "REVEAL_API_KEY"
                    ]
                },
                "password": {
                    "type": "string",
                    "format": "password",
                    "minLength": 12
                }
            }
        },
        "dto.ReauthenticateResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "format": "jwt"
                },
                "expires_in": {
                    "type": "string",
                    "format": "date-time",
                    "x-timezone": "utc"
                },
                "token_type": {
                    "type": "string"
                }
            }
        },
        "dto.RequestAPIKeyResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                }
            }
        },
        "dto.RequestEnvironmentResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.RequestProjectResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.RequestResponse": {
            "type": "object",
            "properties": {
                "api_key": {
                    "$ref": "#/definitions/dto.RequestAPIKeyResponse"
                },
                "created_at": {
                    "type": "string"
                },
                "environment": {
                    "$ref": "#/definitions/dto.RequestEnvironmentResponse"
                },
                "execution_status": {
                    "type": "string",
                    "enum": [
                        "success",
                        "forwarded",
                        "client_error",
                        "server_error",
                        "unauthorized",
                        "quota_exceeded"
                    ]
                },
                "id": {
                    "type": "string"
                },
                "ip_address": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "project": {
                    "$ref": "#/definitions/dto.RequestProjectResponse"
                },
                "request_time": {
                    "type": "string"
                },
                "service": {
                    "$ref": "#/definitions/dto.RequestServiceResponse"
                },
                "start_point": {
                    "type": "string"
                },
                "status_code": {
                    "type": "integer"
                },
                "unauthorized_reason": {
                    "type": "string",
                    "enum": [
                        "API_KEY_INVALID",
                        "QUOTA_EXCEEDED",
                        "API_KEY_EXPIRED",
                        "API_KEY_DISABLED",
                        "SERVICE_MISMATCH",
                        "ENVIRONMENT_MISMATCH",
                        "ENVIRONMENT_DISABLED"
                    ]
                }
            }
        },
        "dto.RequestServiceResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "dto.ServiceCreate": {
            "type": "object",
            "required": [
                "name",
                "version"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "string",
                    "maxLength": 25
                }
            }
        },
        "dto.ServiceResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "enabled",
                        "disabled",
                        "deprecated"
                    ]
                },
                "version": {
                    "type": "string",
                    "maxLength": 25
                }
            }
        },
        "dto.ServiceStatusUpdate": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "enabled",
                        "disabled",
                        "deprecated"
                    ]
                }
            }
        },
        "errors.ErrorCode": {
            "type": "string",
            "enum": [
                "NOT_FOUND",
                "INTERNAL",
                "FORBIDDEN",
                "UNAUTHORIZED",
                "ALREADY_EXISTS",
                "VALIDATION_FAILED",
                "AGGREGATE_ERRORS"
            ],
            "x-enum-varnames": [
                "CodeNotFound",
                "CodeInternal",
                "CodeForbidden",
                "CodeUnauthorized",
                "CodeAlreadyExists",
                "CodeValidationFailed",
                "CodeAggregate"
            ]
        },
        "errors.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/errors.ErrorCode"
                },
                "entity": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/errors.HTTPError"
                    }
                },
                "identifiers": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "loc": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "OAuth2Password": {
            "type": "oauth2",
            "flow": "password",
            "tokenUrl": "/api/v1/auth/login"
        },
        "ScopedToken": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "tags": [
        {
            "name": "Authentication"
        },
        {
            "name": "Services"
        },
        {
            "name": "Clients"
        },
        {
            "name": "Projects"
        },
        {
            "name": "Environments"
        },
        {
            "name": "API Keys"
        }
    ]
}