{
    "swagger": "2.0",
    "info": {
        "description": "API for centralized API key management and service access control.",
        "title": "Pandora Core",
        "termsOfService": "http://example.com/terms/",
        "contact": {
            "name": "Pandora Core Support",
            "url": "http://example.com/support",
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "paths": {
        "/api/v1/api-keys": {
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Generates an API Key for a specific environment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API Keys"
                ],
                "summary": "Creates a new API Key",
                "parameters": [
                    {
                        "description": "API Key creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.APIKeyCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.APIKeyResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/api-keys/{id}": {
            "patch": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Modifies the expiration date of a specific API key by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API Keys"
                ],
                "summary": "Updates an API key",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "API Key ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated API key data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.APIKeyUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.APIKeyResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/change-password": {
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Allows an authenticated user to change their password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Change password",
                "parameters": [
                    {
                        "description": "New password and confirmation",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ChangePassword"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "description": "Authenticates the administrator and returns a token.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Login username",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Login password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AuthenticateResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/clients": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Fetches a list of clients, optionally filtered by client type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clients"
                ],
                "summary": "Retrieves all clients with optional filtering by type",
                "parameters": [
                    {
                        "enum": [
                            0,
                            1,
                            2
                        ],
                        "type": "integer",
                        "x-enum-varnames": [
                            "ClientTypeNull",
                            "ClientDeveloper",
                            "ClientOrganization"
                        ],
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ClientResponse"
                            }
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Adds a new client to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clients"
                ],
                "summary": "Creates a new client",
                "parameters": [
                    {
                        "description": "Client creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ClientCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.ClientResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/clients/{id}": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Fetches the details of a specific client using its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clients"
                ],
                "summary": "Retrieves a client by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ClientResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Modifies client data based on the provided ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clients"
                ],
                "summary": "Updates an existing client",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated client data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ClientUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ClientResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/clients/{id}/projects": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Fetches a list of projects associated with a given client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clients"
                ],
                "summary": "Retrieves all projects for a specific client",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ProjectResponse"
                            }
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/environments": {
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Adds a new environment to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Environments"
                ],
                "summary": "Creates a new environment",
                "parameters": [
                    {
                        "description": "Environment creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EnvironmentCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.EnvironmentResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/environments/{id}": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Fetches the details of a specific environment using its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Environments"
                ],
                "summary": "Retrieves an environment by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Environment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.EnvironmentResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Modifies the details of a specific environment by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Environments"
                ],
                "summary": "Updates an environment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Environment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated environment data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EnvironmentUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.EnvironmentResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/environments/{id}/api-keys": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Returns a list of API Keys associated with a specific environment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Environments"
                ],
                "summary": "Retrieves all API Keys for an environment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Environment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.APIKeyResponse"
                            }
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/environments/{id}/services": {
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Associates a service with a given environment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Environments"
                ],
                "summary": "Assigns a service to an environment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Environment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Service data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EnvironmentService"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.EnvironmentServiceResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/environments/{id}/services/{service_id}": {
            "delete": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Disassociates a service from a specific environment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Environments"
                ],
                "summary": "Removes a service from an environment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Environment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Service ID",
                        "name": "service_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Modifies the configuration of a service within a specific environment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Environments"
                ],
                "summary": "Updates a service assigned to an environment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Environment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Service ID",
                        "name": "service_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated service configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EnvironmentServiceUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.EnvironmentServiceResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/environments/{id}/services/{service_id}/reset-requests": {
            "patch": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Resets the available request count for a specific service within an environment",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Environments"
                ],
                "summary": "Resets request quota for a service in an environment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Environment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Service ID",
                        "name": "service_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.EnvironmentServiceResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/projects": {
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Adds a new project to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Creates a new project",
                "parameters": [
                    {
                        "description": "Project creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ProjectCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.ProjectResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/projects/{id}": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Fetches the details of a specific project using its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Retrieves a project by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ProjectResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Modifies the details of a specific project by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Updates a project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated project data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ProjectUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ProjectResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/projects/{id}/environments": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Fetches a list of environments associated with a given project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Retrieves all environments for a specific project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.EnvironmentResponse"
                            }
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/projects/{id}/services": {
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Associates a service with a given project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Assigns a service to a project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Service assignment data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ProjectService"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ProjectServiceResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/projects/{id}/services/{service_id}": {
            "delete": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Disassociates a service from a specific project",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Removes a service from a project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Service ID",
                        "name": "service_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Modifies the configuration of a service within a specific project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Updates a service assigned to a project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Service ID",
                        "name": "service_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated service configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ProjectServiceUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ProjectServiceResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/projects/{id}/services/{service_id}/reset-requests": {
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Resets the request quota for a specific service assigned to a project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Resets available requests for a service in a project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Service ID",
                        "name": "service_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Reset configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ProjectServiceResetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ProjectServiceResetRequestResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/services": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Fetches a list of all registered services",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "summary": "Retrieves all services",
                "parameters": [
                    {
                        "enum": [
                            0,
                            1,
                            2,
                            3
                        ],
                        "type": "integer",
                        "x-enum-varnames": [
                            "ServiceStatusNull",
                            "ServiceActive",
                            "ServiceDeactivated",
                            "ServiceDeprecated"
                        ],
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ServiceResponse"
                            }
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Adds a new service to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "summary": "Creates a new service",
                "parameters": [
                    {
                        "description": "Service creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ServiceCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.ServiceResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/services/{id}": {
            "delete": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Permanently removes a service by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "summary": "Deletes a service",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/services/{id}/status": {
            "patch": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "description": "Changes the current status of a specific service by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "summary": "Updates the status of a service",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New service status",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ServiceResponse"
                        }
                    },
                    "default": {
                        "description": "Default error response for all failures",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.APIKeyCreate": {
            "type": "object",
            "required": [
                "environmentID"
            ],
            "properties": {
                "environmentID": {
                    "type": "integer"
                },
                "expiresAt": {
                    "type": "string"
                }
            }
        },
        "dto.APIKeyResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "environmentID": {
                    "type": "integer"
                },
                "expiresAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "lastUsed": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/enums.APIKeyStatus"
                }
            }
        },
        "dto.APIKeyUpdate": {
            "type": "object",
            "properties": {
                "expiresAt": {
                    "type": "string"
                }
            }
        },
        "dto.AuthenticateResponse": {
            "type": "object",
            "properties": {
                "expiresIn": {
                    "type": "string"
                },
                "forcePasswordReset": {
                    "type": "boolean"
                },
                "token": {
                    "type": "string"
                },
                "tokenType": {
                    "type": "string"
                }
            }
        },
        "dto.ChangePassword": {
            "type": "object",
            "properties": {
                "confirmPassword": {
                    "type": "string"
                },
                "newPassword": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.ClientCreate": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/enums.ClientType"
                }
            }
        },
        "dto.ClientResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/enums.ClientType"
                }
            }
        },
        "dto.ClientUpdate": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/enums.ClientType"
                }
            }
        },
        "dto.EnvironmentCreate": {
            "type": "object",
            "required": [
                "name",
                "projectID",
                "services"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "projectID": {
                    "type": "integer"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.EnvironmentService"
                    }
                }
            }
        },
        "dto.EnvironmentResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "projectID": {
                    "type": "integer"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.EnvironmentServiceResponse"
                    }
                },
                "status": {
                    "$ref": "#/definitions/enums.EnvironmentStatus"
                }
            }
        },
        "dto.EnvironmentService": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "maxRequest": {
                    "type": "integer"
                }
            }
        },
        "dto.EnvironmentServiceReset": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "service": {
                    "$ref": "#/definitions/dto.EnvironmentServiceResponse"
                },
                "status": {
                    "$ref": "#/definitions/enums.EnvironmentStatus"
                }
            }
        },
        "dto.EnvironmentServiceResponse": {
            "type": "object",
            "properties": {
                "assignedAt": {
                    "type": "string"
                },
                "availableRequest": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "maxRequest": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "dto.EnvironmentServiceUpdate": {
            "type": "object",
            "properties": {
                "availableRequest": {
                    "type": "integer"
                },
                "maxRequest": {
                    "type": "integer"
                }
            }
        },
        "dto.EnvironmentUpdate": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.ProjectCreate": {
            "type": "object",
            "properties": {
                "clientID": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ProjectService"
                    }
                },
                "status": {
                    "$ref": "#/definitions/enums.ProjectStatus"
                }
            }
        },
        "dto.ProjectResponse": {
            "type": "object",
            "properties": {
                "clientID": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ProjectServiceResponse"
                    }
                },
                "status": {
                    "$ref": "#/definitions/enums.ProjectStatus"
                }
            }
        },
        "dto.ProjectService": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "maxRequest": {
                    "type": "integer"
                },
                "resetFrequency": {
                    "$ref": "#/definitions/enums.ProjectServiceResetFrequency"
                }
            }
        },
        "dto.ProjectServiceResetRequest": {
            "type": "object",
            "properties": {
                "recalculateNextReset": {
                    "type": "boolean"
                }
            }
        },
        "dto.ProjectServiceResetRequestResponse": {
            "type": "object",
            "properties": {
                "environmentServices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.EnvironmentServiceReset"
                    }
                },
                "projectService": {
                    "$ref": "#/definitions/dto.ProjectServiceResponse"
                },
                "resetCount": {
                    "type": "integer"
                }
            }
        },
        "dto.ProjectServiceResponse": {
            "type": "object",
            "properties": {
                "assignedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "maxRequest": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nextReset": {
                    "type": "string"
                },
                "resetFrequency": {
                    "$ref": "#/definitions/enums.ProjectServiceResetFrequency"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "dto.ProjectServiceUpdate": {
            "type": "object",
            "properties": {
                "maxRequest": {
                    "type": "integer"
                },
                "nextReset": {
                    "type": "string"
                },
                "resetFrequency": {
                    "$ref": "#/definitions/enums.ProjectServiceResetFrequency"
                }
            }
        },
        "dto.ProjectUpdate": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.ServiceCreate": {
            "type": "object",
            "required": [
                "name",
                "version"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "dto.ServiceResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/enums.ServiceStatus"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "enums.APIKeyStatus": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "APIKeyStatusNull",
                "APIKeyActive",
                "APIKeyDeactivated"
            ]
        },
        "enums.ClientType": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "ClientTypeNull",
                "ClientDeveloper",
                "ClientOrganization"
            ]
        },
        "enums.EnvironmentStatus": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "EnvironmentStatusNull",
                "EnvironmentActive",
                "EnvironmentDeactivated"
            ]
        },
        "enums.ProjectServiceResetFrequency": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "x-enum-varnames": [
                "ProjectServiceNull",
                "ProjectServiceDaily",
                "ProjectServiceWeekly",
                "ProjectServiceBiweekly",
                "ProjectServiceMonthly"
            ]
        },
        "enums.ProjectStatus": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "x-enum-varnames": [
                "ProjectStatusNull",
                "ProjectInProduction",
                "ProjectInDevelopment",
                "ProjectDeactivated"
            ]
        },
        "enums.ServiceStatus": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "x-enum-varnames": [
                "ServiceStatusNull",
                "ServiceActive",
                "ServiceDeactivated",
                "ServiceDeprecated"
            ]
        },
        "utils.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {}
            }
        }
    },
    "securityDefinitions": {
        "OAuth2Password": {
            "type": "oauth2",
            "flow": "password",
            "tokenUrl": "/api/v1/auth/login"
        }
    },
    "tags": [
        {
            "name": "Authentication"
        },
        {
            "name": "Services"
        },
        {
            "name": "Clients"
        },
        {
            "name": "Projects"
        },
        {
            "name": "Environments"
        },
        {
            "name": "API Keys"
        }
    ]
}