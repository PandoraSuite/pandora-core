// Code generated by MockGen. DO NOT EDIT.
// Source: internal/app/auth/reset_check/ports.go
//
// Generated by this command:
//
//	mockgen -source=internal/app/auth/reset_check/ports.go -destination=internal/app/auth/reset_check/mock/ports.go -package=mock
//

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	entities "github.com/MAD-py/pandora-core/internal/domain/entities"
	errors "github.com/MAD-py/pandora-core/internal/domain/errors"
	gomock "go.uber.org/mock/gomock"
)

// MockCredentialsRepository is a mock of CredentialsRepository interface.
type MockCredentialsRepository struct {
	ctrl     *gomock.Controller
	recorder *MockCredentialsRepositoryMockRecorder
	isgomock struct{}
}

// MockCredentialsRepositoryMockRecorder is the mock recorder for MockCredentialsRepository.
type MockCredentialsRepositoryMockRecorder struct {
	mock *MockCredentialsRepository
}

// NewMockCredentialsRepository creates a new mock instance.
func NewMockCredentialsRepository(ctrl *gomock.Controller) *MockCredentialsRepository {
	mock := &MockCredentialsRepository{ctrl: ctrl}
	mock.recorder = &MockCredentialsRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCredentialsRepository) EXPECT() *MockCredentialsRepositoryMockRecorder {
	return m.recorder
}

// GetByUsername mocks base method.
func (m *MockCredentialsRepository) GetByUsername(ctx context.Context, username string) (*entities.Credentials, errors.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByUsername", ctx, username)
	ret0, _ := ret[0].(*entities.Credentials)
	ret1, _ := ret[1].(errors.Error)
	return ret0, ret1
}

// GetByUsername indicates an expected call of GetByUsername.
func (mr *MockCredentialsRepositoryMockRecorder) GetByUsername(ctx, username any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByUsername", reflect.TypeOf((*MockCredentialsRepository)(nil).GetByUsername), ctx, username)
}
