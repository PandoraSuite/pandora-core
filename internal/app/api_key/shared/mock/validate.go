// Code generated by MockGen. DO NOT EDIT.
// Source: internal/app/api_key/shared/validate.go
//
// Generated by this command:
//
//	mockgen -source=internal/app/api_key/shared/validate.go -destination=internal/app/api_key/shared/mock/validate.go -package=mock
//

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	dto "github.com/MAD-py/pandora-core/internal/domain/dto"
	entities "github.com/MAD-py/pandora-core/internal/domain/entities"
	errors "github.com/MAD-py/pandora-core/internal/domain/errors"
	gomock "go.uber.org/mock/gomock"
)

// MockValidateServiceRepository is a mock of ValidateServiceRepository interface.
type MockValidateServiceRepository struct {
	ctrl     *gomock.Controller
	recorder *MockValidateServiceRepositoryMockRecorder
	isgomock struct{}
}

// MockValidateServiceRepositoryMockRecorder is the mock recorder for MockValidateServiceRepository.
type MockValidateServiceRepositoryMockRecorder struct {
	mock *MockValidateServiceRepository
}

// NewMockValidateServiceRepository creates a new mock instance.
func NewMockValidateServiceRepository(ctrl *gomock.Controller) *MockValidateServiceRepository {
	mock := &MockValidateServiceRepository{ctrl: ctrl}
	mock.recorder = &MockValidateServiceRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockValidateServiceRepository) EXPECT() *MockValidateServiceRepositoryMockRecorder {
	return m.recorder
}

// GetByNameAndVersion mocks base method.
func (m *MockValidateServiceRepository) GetByNameAndVersion(ctx context.Context, name, version string) (*entities.Service, errors.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByNameAndVersion", ctx, name, version)
	ret0, _ := ret[0].(*entities.Service)
	ret1, _ := ret[1].(errors.Error)
	return ret0, ret1
}

// GetByNameAndVersion indicates an expected call of GetByNameAndVersion.
func (mr *MockValidateServiceRepositoryMockRecorder) GetByNameAndVersion(ctx, name, version any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByNameAndVersion", reflect.TypeOf((*MockValidateServiceRepository)(nil).GetByNameAndVersion), ctx, name, version)
}

// MockValidateAPIKeyRepository is a mock of ValidateAPIKeyRepository interface.
type MockValidateAPIKeyRepository struct {
	ctrl     *gomock.Controller
	recorder *MockValidateAPIKeyRepositoryMockRecorder
	isgomock struct{}
}

// MockValidateAPIKeyRepositoryMockRecorder is the mock recorder for MockValidateAPIKeyRepository.
type MockValidateAPIKeyRepositoryMockRecorder struct {
	mock *MockValidateAPIKeyRepository
}

// NewMockValidateAPIKeyRepository creates a new mock instance.
func NewMockValidateAPIKeyRepository(ctrl *gomock.Controller) *MockValidateAPIKeyRepository {
	mock := &MockValidateAPIKeyRepository{ctrl: ctrl}
	mock.recorder = &MockValidateAPIKeyRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockValidateAPIKeyRepository) EXPECT() *MockValidateAPIKeyRepositoryMockRecorder {
	return m.recorder
}

// GetByKey mocks base method.
func (m *MockValidateAPIKeyRepository) GetByKey(ctx context.Context, key string) (*entities.APIKey, errors.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByKey", ctx, key)
	ret0, _ := ret[0].(*entities.APIKey)
	ret1, _ := ret[1].(errors.Error)
	return ret0, ret1
}

// GetByKey indicates an expected call of GetByKey.
func (mr *MockValidateAPIKeyRepositoryMockRecorder) GetByKey(ctx, key any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByKey", reflect.TypeOf((*MockValidateAPIKeyRepository)(nil).GetByKey), ctx, key)
}

// MockValidateEnvironmentRepository is a mock of ValidateEnvironmentRepository interface.
type MockValidateEnvironmentRepository struct {
	ctrl     *gomock.Controller
	recorder *MockValidateEnvironmentRepositoryMockRecorder
	isgomock struct{}
}

// MockValidateEnvironmentRepositoryMockRecorder is the mock recorder for MockValidateEnvironmentRepository.
type MockValidateEnvironmentRepositoryMockRecorder struct {
	mock *MockValidateEnvironmentRepository
}

// NewMockValidateEnvironmentRepository creates a new mock instance.
func NewMockValidateEnvironmentRepository(ctrl *gomock.Controller) *MockValidateEnvironmentRepository {
	mock := &MockValidateEnvironmentRepository{ctrl: ctrl}
	mock.recorder = &MockValidateEnvironmentRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockValidateEnvironmentRepository) EXPECT() *MockValidateEnvironmentRepositoryMockRecorder {
	return m.recorder
}

// GetByID mocks base method.
func (m *MockValidateEnvironmentRepository) GetByID(ctx context.Context, id int) (*entities.Environment, errors.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", ctx, id)
	ret0, _ := ret[0].(*entities.Environment)
	ret1, _ := ret[1].(errors.Error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID.
func (mr *MockValidateEnvironmentRepositoryMockRecorder) GetByID(ctx, id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockValidateEnvironmentRepository)(nil).GetByID), ctx, id)
}

// MockValidateProjectRepository is a mock of ValidateProjectRepository interface.
type MockValidateProjectRepository struct {
	ctrl     *gomock.Controller
	recorder *MockValidateProjectRepositoryMockRecorder
	isgomock struct{}
}

// MockValidateProjectRepositoryMockRecorder is the mock recorder for MockValidateProjectRepository.
type MockValidateProjectRepositoryMockRecorder struct {
	mock *MockValidateProjectRepository
}

// NewMockValidateProjectRepository creates a new mock instance.
func NewMockValidateProjectRepository(ctrl *gomock.Controller) *MockValidateProjectRepository {
	mock := &MockValidateProjectRepository{ctrl: ctrl}
	mock.recorder = &MockValidateProjectRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockValidateProjectRepository) EXPECT() *MockValidateProjectRepositoryMockRecorder {
	return m.recorder
}

// GetProjectClientInfoByID mocks base method.
func (m *MockValidateProjectRepository) GetProjectClientInfoByID(ctx context.Context, id int) (*dto.ProjectClientInfoResponse, errors.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProjectClientInfoByID", ctx, id)
	ret0, _ := ret[0].(*dto.ProjectClientInfoResponse)
	ret1, _ := ret[1].(errors.Error)
	return ret0, ret1
}

// GetProjectClientInfoByID indicates an expected call of GetProjectClientInfoByID.
func (mr *MockValidateProjectRepositoryMockRecorder) GetProjectClientInfoByID(ctx, id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProjectClientInfoByID", reflect.TypeOf((*MockValidateProjectRepository)(nil).GetProjectClientInfoByID), ctx, id)
}
